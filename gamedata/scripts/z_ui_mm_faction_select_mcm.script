local old_UINewGame_OnCheckSetStory = ui_mm_faction_select.UINewGame.OnCheckSetStory
function ui_mm_faction_select.UINewGame:OnCheckSetStory()
    if (not self.access) then
        return
    end

    self.ck_survival:SetCheck(false)
    self.ck_states["ck_survival"] = false

    self.ck_azazel_mode:SetCheck(false)
    self.ck_states["ck_azazel_mode"] = false

    self:LoadMap()
end

local old_UINewGame_OnCheckSetWarfare = ui_mm_faction_select.UINewGame.OnCheckSetWarfare
function ui_mm_faction_select.UINewGame:OnCheckSetWarfare()
    if (not self.access) then
        return
    end

    self.ck_survival:SetCheck(false)
    self.ck_states["ck_survival"] = false

    self:LoadMap()
end

local is_on_game_load = false
local old_on_game_load = ui_mm_faction_select.on_game_load
function ui_mm_faction_select.on_game_load(binder)
    local config = axr_main.config
    if not (config) then
        return
    end
    local faction = config:r_value("character_creation","new_game_faction",3) or ""
    is_on_game_load = true
    old_on_game_load(binder)
    is_on_game_load = false
    if ui_mm_faction_select.faction_psi_off[faction] then
        local helm_name = "good_psy_helmet"
        alife_create_item(helm_name, db.actor)
    end
end

local info_to_disable = {
    "yan_labx16_switcher_1_off",
    "yan_labx16_switcher_2_off",
    "yan_labx16_switcher_3_off",
    "yan_labx16_switcher_primary_off",
    "bar_deactivate_radar_done",
    "warlab_deactivate_generators_done"
}
local old_give_info = _G.give_info
function _G.give_info(info)
    if (not is_on_game_load) then
        old_give_info(info)
        return
    end
    for _, v in pairs(info_to_disable) do
        if (info == v) then
            return
        end
    end
    old_give_info(info)
end

local old_actor_on_first_update = ui_mm_faction_select.actor_on_first_update
function ui_mm_faction_select.actor_on_first_update(binder,delta)
    old_actor_on_first_update(binder,delta)
    -- Survival mode
    if (IsSurvivalMode()) then
        game_relations.change_factions_community_num("zombied",0,-5000)
        game_relations.change_factions_community_num("monolith",0,-5000)

        local faction = character_community(db.actor):sub(7)
        if (ini_sys:section_exist("survival_squad_"..faction) and ui_mm_faction_select.start_pos) then
            local squad = alife_create("survival_squad_"..faction,ui_mm_faction_select.start_pos[3],ui_mm_faction_select.start_pos[1],ui_mm_faction_select.start_pos[2])
            if (squad) then
                axr_companions.companion_squads[squad.id] = squad
                squad:create_npc(nil,ui_mm_faction_select.start_pos[3],ui_mm_faction_select.start_pos[1],ui_mm_faction_select.start_pos[2])
                for k in squad:squad_members() do
                    local se_obj = k.object or k.id and alife():object(k.id)
                    if (se_obj) then
                        game_relations.change_factions_community_num("zombied",k.id,-5000)
                        SIMBOARD:setup_squad_and_group(se_obj)

                        se_save_var(se_obj.id,se_obj:name(),"companion",true)
                        se_save_var(se_obj.id,se_obj:name(),"companion_cannot_dismiss",true)
                    end
                end
            end
        end
    end
end