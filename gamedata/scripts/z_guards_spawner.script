function get_random_faction(smart, guard)
	if _G.WARFARE and smart.owning_faction and smart.owning_faction ~= "none" and warfare_options.options.factions[smart.owning_faction].participate_in_warfare then
		return smart.owning_faction
	end

	local random_faction = is_not_empty(guard.factions) and guard.factions[math.random(#guard.factions)]
	random_faction = guards_spawner.faction_name_replace[random_faction] or random_faction
	return random_faction
end

local old_guards_spawner_spawn_guard = guards_spawner.spawn_guard
guards_spawner.spawn_guard = function()
	local tg = time_global()
	if (guards_spawner.upd_tmr and tg < guards_spawner.upd_tmr) then
		return
	end
	guards_spawner.upd_tmr = tg + guards_spawner.upd_upd_tmr

	local cur_game_time = game.get_game_time()
	if not guards_spawner.prev_time then
		guards_spawner.prev_time = guards_spawner.ctime_to_t(cur_game_time)
	end

	local time_diff = cur_game_time:diffSec(guards_spawner.t_to_ctime(guards_spawner.prev_time))
	if time_diff < guards_spawner.spawn_timer then
		guards_spawner.pr("~ time_diff < spawn_timer || %s < %s", math.ceil(time_diff), guards_spawner.spawn_timer)
		return
	end

	guards_spawner.prev_time = guards_spawner.ctime_to_t(cur_game_time)

	guards_spawner.pr("------------- Spawning Squads -------------")
	for smart_name, t in pairs(guards_spawner.guards_t) do
		guards_spawner.pr("=================")
		if t.max_amount > 0 and ( (not guards_spawner.guarded_smarts[smart_name]) or ( #guards_spawner.guarded_smarts[smart_name] < t.max_amount) ) then
			local smart = SIMBOARD:get_smart_by_name(smart_name)

			-- build squad section
			local random_faction = get_random_faction(smart, t)
			local random_rank = is_not_empty(t.ranks) and t.ranks[math.random(#t.ranks)]
			local squad_section = (random_faction and random_rank) and random_faction .. "_sim_squad_" .. random_rank
			squad_section = guards_spawner.squad_replace[squad_section] or squad_section

			-- replace squads if "squads" field filled
			if t.squads and is_not_empty(t.squads) then
				squad_section = t.squads[math.random(#t.squads)]
			end

			-- spawn squad
			local squad = smart and squad_section and ini_sys:section_exist(squad_section) and SIMBOARD:create_squad(smart, squad_section)

			-- set this smart as target and add squad.id to table
			if squad then
				guards_spawner.guarded_smarts[smart_name] = guards_spawner.guarded_smarts[smart_name] or {}
				table.insert(guards_spawner.guarded_smarts[smart_name], squad.id)
				guards_spawner.pr("Spawning at smart_name: [ %s ] || squad_section: [ %s ] || current_amount: [ %s ] || max_amount: [ %s ]", smart_name, squad_section, #guards_spawner.guarded_smarts[smart_name], t.max_amount)
				squad.scripted_target = smart_name
			end

		else
			guards_spawner.pr("# No spawn, smart_name: [ %s ] || guards_amount: [ %s ] || max_amount: [ %s ]", smart_name, #guards_spawner.guarded_smarts[smart_name], t.max_amount)
		end
	end
	guards_spawner.pr("---------------------------------------------")
end